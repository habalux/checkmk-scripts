#!/usr/bin/python
# Simple local check for check_mk to make sure all the user defined sysctl values are in effect
#
# Copyright (c) 2013, Teemu Haapoja <teemu.haapoja@gmail.com>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
# 
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
# OF SUCH DAMAGE.

import os
import sys

def read_values_from_file(filename):
	lines = open(filename).read().split('\n')
	values = {}
	for l in lines:
		if l.startswith("#") or len(l.strip()) == 0:
			continue
		else:
			vals = l.split('=')
			values[vals[0].strip()] = vals[1].strip()
	return values

if __name__ == "__main__":
	import glob
	files = glob.glob("/etc/sysctl.d/*.conf")
	ret = {}
	values = {}
	for f in files:
		vals = read_values_from_file(f)
		if len(vals) > 0:
			for k,v in vals.items():
				values[k] = v

	for valname,value in values.items():
		valname_split = os.sep.join(['/proc/sys']+valname.split('.'))
		proc_value = open(valname_split).read().strip()

		# replace tabs with spaces
		proc_value = proc_value.replace('\t',' ')

		if proc_value != value:
			statuscode = 1
			statusmessage = "Configured value different from sysctl value! ('%s' != '%s')"%(proc_value, value)
		else:
			statuscode = 0
			statusmessage = "OK (%s)"%(value)
		print "%d SYSCTL_%s - %s"%(statuscode, valname.replace('.','_'), statusmessage)

